const fs=require("fs"),createThingSchema=require("../../mongooseModels/createThingSchema"),transformInputData=require("./transformInputData"),createCreateThingMutationResolver=a=>{return async(b,c,d,e)=>{const{data:f}=c,{mongooseConn:g}=d,{core:h,single:i,first:j}=transformInputData(f,a),{name:k}=a,l=createThingSchema(a),m=g.model(k,l);let n;if(i){const a=await m.create(j);n=a.toObject()}else{const a=[];h.forEach((b,c)=>{const{name:d}=c,e=createThingSchema(c),f=g.model(d,e);a.push(f.bulkWrite(b))}),await Promise.all(a);// eslint-disable-next-line no-underscore-dangle
const b=await m.findById(j._id);n=b.toObject()}const o="***************************************\n",p=`${o}${JSON.stringify(c,null," ")}\n${o}${JSON.stringify(n,null," ")}\n${o}${e}\n${o}${JSON.stringify(e,null," ")}\n${o}`;fs.writeFileSync("create-thing.log",p);const{_id:q}=n;return n.id=q,n}};module.exports=createCreateThingMutationResolver;