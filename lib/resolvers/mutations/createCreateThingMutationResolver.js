const createThingSchema=require("../../mongooseModels/createThingSchema"),processCreateInputData=require("./processCreateInputData"),updatePeriphery=require("./updatePeriphery"),createCreateThingMutationResolver=(a,b)=>{const{enums:c}=b;return async(b,d,e)=>{const{data:f}=d,{mongooseConn:g}=e,{core:h,periphery:i,single:j,first:k}=processCreateInputData(f,a),{name:l}=a,m=createThingSchema(a,c),n=g.model(l,m);await updatePeriphery(i,g);let o;if(j){const a=await n.create(k);o=a.toObject()}else{const a=[];h.forEach((b,d)=>{const{name:e}=d,f=createThingSchema(d,c),h=g.model(e,f);a.push(h.bulkWrite(b))}),await Promise.all(a),o=await n.findById(k._id,null,{lean:!0})}const{_id:p}=o;return o.id=p,o}};module.exports=createCreateThingMutationResolver;