const fs=require("fs"),createThingSchema=require("../../mongooseModels/createThingSchema"),createCreateThingMutationResolver=a=>{return async(b,c,d,e)=>{const{data:f}=c,{mongooseConn:g}=d,h=createThingSchema(a),{relationalFields:i,thingName:j}=a;let k=[];i&&(k=i.map(({name:a})=>a));const l=Object.keys(f).reduce((a,b)=>(k.includes(b)?(a[b]=f[b].connect,console.log("--------------------------------------"),console.log("prev[key] =",a[b]),console.log("--------------------------------------")):a[b]=f[b],a),{});console.log("data2 =",l),console.log("--------------------------------------");const m=await g.model(j,h);console.log("Thing =",m),console.log("--------------------------------------");const n=await m.create(l);console.log("thing =",n),console.log("--------------------------------------");const o=n.toObject();console.log("thing2=",o),console.log("--------------------------------------");const p="***************************************\n",q=`${p}${JSON.stringify(c,null," ")}\n${p}${JSON.stringify(o,null," ")}\n${p}${e}\n${p}${JSON.stringify(e,null," ")}\n${p}`;fs.writeFileSync("create-thing.log",q);const{_id:r}=o;return o.id=r,o}};module.exports=createCreateThingMutationResolver;