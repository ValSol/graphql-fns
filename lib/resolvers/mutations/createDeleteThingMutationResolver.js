const checkInventory=require("../../utils/checkInventory"),createThingSchema=require("../../mongooseModels/createThingSchema"),processDeleteData=require("./processDeleteData"),createDeleteThingMutationResolver=(a,b)=>{const{enums:c,inventory:d}=b,{name:e}=a;if(!checkInventory(["Mutation","deleteThing",e],d))return null;return async(b,d,f)=>{const{where:g}=d,{mongooseConn:h}=f,i=createThingSchema(a,c),j=h.model(e,i),k=Object.keys(g);if(1!==k.length)throw new TypeError("Expected exactly one key in where arg!");const l=g.id?{_id:g.id}:g,m=await j.findOne(l,null,{lean:!0});if(!m)return null;const{_id:n}=m;await j.findOneAndDelete({_id:n});const o=[],p=processDeleteData(m,a);return p.forEach((a,b)=>{const{name:d}=b,e=createThingSchema(b,c),f=h.model(d,e);o.push(f.bulkWrite(a))}),await Promise.all(o),m.id=n,m}};module.exports=createDeleteThingMutationResolver;