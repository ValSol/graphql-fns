const fs=require("fs"),createThingSchema=require("../../mongooseModels/createThingSchema"),getProjectionFromInfo=require("../getProjectionFromInfo"),createThingScalarResolver=a=>{return async(b,c,d,e)=>{const{fieldName:f}=e,g=b[f];if(!g||!g.length)return[];const{mongooseConn:h}=d,i=createThingSchema(a),{name:j}=a,k=await h.model(j,i),l=getProjectionFromInfo(e),m="***************************************\n",n=`${m}${f}\n${m}${g}\n${m}${JSON.stringify(b,null," ")}\n${m}${JSON.stringify(e,null," ")}\n${m}`;fs.writeFileSync("array-thing.log",n);const o=await k.find({_id:{$in:g}},l),p=o.map(a=>{const b=a.toObject();// eslint-disable-next-line no-underscore-dangle
return b.id=b._id,b});return p}};module.exports=createThingScalarResolver;