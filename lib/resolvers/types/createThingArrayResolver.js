const fs=require("fs"),createThingSchema=require("../../mongooseModels/createThingSchema"),getProjectionFromInfo=require("../getProjectionFromInfo"),createThingScalarResolver=a=>{return async(b,c,d,e)=>{const{fieldName:f}=e,g="***************************************\n",h=`${g}${f}\n${g}${JSON.stringify(b,null," ")}\n${g}${JSON.stringify(e,null," ")}\n${g}`;fs.writeFileSync("array-thing.log",h);const i=b[f];if(!i||!i.length)return[];const{mongooseConn:j}=d,k=createThingSchema(a),{name:l}=a,m=j.model(l,k),n=getProjectionFromInfo(e),o=await m.find({_id:{$in:i}},n,{lean:!0}),p=o.map(a=>({...a,// eslint-disable-next-line no-underscore-dangle
id:a._id}));return p}};module.exports=createThingScalarResolver;