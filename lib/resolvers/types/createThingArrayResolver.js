const fs=require("fs"),createThingSchema=require("../../mongooseModels/createThingSchema"),createThingScalarResolver=a=>{return async(b,c,d,e)=>{const{fieldName:f}=e,g=b[f];if(!g||!g.length)return[];const{mongooseConn:h}=d,i=createThingSchema(a),{thingName:j}=a,k=await h.model(j,i),l="***************************************\n",m=`${l}${f}\n${l}${g}\n${l}${e}\n${l}${JSON.stringify(e,null," ")}\n${l}`;fs.writeFileSync("array-thing.log",m);// const thing = await Thing.findById({ _id: id }, projection);
const n=await k.find({_id:{$in:g}}),o=n.map(a=>{const b=a.toObject();// eslint-disable-next-line no-underscore-dangle
return b.id=b._id,b});return o}};module.exports=createThingScalarResolver;