const createThingArrayResolver=require("./createThingArrayResolver"),createThingScalarResolver=require("./createThingScalarResolver"),composeThingResolvers=a=>{const{duplexFields:b,geospatialFields:c,relationalFields:d}=a,e={};return d&&d.reduce((a,{array:b,name:c,config:d})=>{if(b){const b=createThingArrayResolver(d);// eslint-disable-next-line no-param-reassign
a[c]=b}else{const b=createThingScalarResolver(d);// eslint-disable-next-line no-param-reassign
a[c]=b}return a},e),b&&b.reduce((a,{array:b,name:c,config:d})=>{if(b){const b=createThingArrayResolver(d);// eslint-disable-next-line no-param-reassign
a[c]=b}else{const b=createThingScalarResolver(d);// eslint-disable-next-line no-param-reassign
a[c]=b}return a},e),c&&c.reduce((a,{name:b})=>{return a[b]=(a,b,c,d)=>{const{fieldName:e}=d,f=a[e];return f?f:null},a},e),e};module.exports=composeThingResolvers;