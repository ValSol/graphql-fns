const checkInventory=require("../../utils/checkInventory"),createThingSchema=require("../../mongooseModels/createThingSchema"),getProjectionFromInfo=require("../getProjectionFromInfo"),composeNearInput=require("./composeNearInput"),composeSortInput=require("./composeSortInput"),createThingsQueryResolver=(a,b)=>{const{enums:c,inventory:d}=b,{name:e}=a;if(!checkInventory(["Query","things",e],d))return null;return async(b,d,f,g)=>{const{near:h,pagination:i,sort:j,where:k}=d,{mongooseConn:l}=f,m=createThingSchema(a,c),n=l.model(e,m),o=h&&composeNearInput(h),p=getProjectionFromInfo(g);let q=n.find(o||k||{},p,{lean:!0});if(j){const{sortBy:a}=j,b=composeSortInput(a);b.forEach(a=>q.sort(a))}if(i){const{skip:a,first:b}=i;q=q.skip(a).limit(b)}const r=await q.exec();if(!r)return[];const s=r.map(a=>{const{_id:b}=a;return{...a,id:b}});return s}};module.exports=createThingsQueryResolver;