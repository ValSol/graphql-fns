const createThingSchema=require("../../mongooseModels/createThingSchema"),getProjectionFromInfo=require("../getProjectionFromInfo"),composeNearInput=require("./composeNearInput"),composeSortInput=require("./composeSortInput"),createThingsQueryResolver=a=>{return async(b,c,d,e)=>{const{near:f,pagination:g,sort:h,where:i}=c,{mongooseConn:j}=d,k=createThingSchema(a),{name:l}=a,m=j.model(l,k),n=f&&composeNearInput(f),o=getProjectionFromInfo(e);let p=m.find(n||i||{},o,{lean:!0});if(h){const{sortBy:a}=h,b=composeSortInput(a);b.forEach(a=>p.sort(a))}if(g){const{skip:a,first:b}=g;p=p.skip(a).limit(b)}const q=await p.exec();if(!q)return[];const r=q.map(a=>{const{_id:b}=a;return{...a,id:b}});return r}};module.exports=createThingsQueryResolver;